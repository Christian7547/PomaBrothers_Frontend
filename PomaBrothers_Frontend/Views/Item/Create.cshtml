@model Item

@{
    ViewData["Title"] = "Añadir";
}

<h1>Añadir</h1>

<h4>Producto</h4>
<hr />

<form asp-action="Create">
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Serie" class="control-label"></label>
                <input asp-for="Serie" class="form-control" />
                <span asp-validation-for="Serie" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" rows="8" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">Modelo:</label>
                <div class="row">
                    <div class="col">
                        <input class="form-control" id="txtSearchModel" placeholder="Buscar..."/>
                        <ul id="showModels"></ul>
                        <input asp-for="ModelId" id="txtModelId" hidden />
                    </div>
                </div>
            </div>

        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" type="number" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Color" class="control-label"></label>
                <input asp-for="Color" class="form-control" />
                <span asp-validation-for="Color" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DurationWarranty" class="control-label">Garantía:</label>
                <div class="row">
                    <div class="col-md-4">
                        <input asp-for="DurationWarranty" class="form-control" />
                    </div>
                    <div class="col-md-8">
                        <select asp-for="TypeWarranty" class="form-control">
                            <option selected>...</option>
                            <option>Años</option>
                            <option>Meses</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" id="categorySelected">
                    @foreach (var category in (List<Category>)ViewBag.Data)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Crear" class="btn btn-success w-25" />
                <a asp-action="Index" class="btn btn-success w-25">Volver</a>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        const txtSearchModel = document.getElementById('txtSearchModel');
        const showModels = document.getElementById('showModels');
        const txtModelId = document.getElementById('txtModelId');

        document.addEventListener('DOMContentLoaded', () => {
            txtSearchModel.addEventListener('input', () => {
                showModels.style.display = 'block';
                searchModel(txtSearchModel.value);
            });
        });

        function searchModel(findModel) {
            fetch(`/Item/SearchModel?searchModel=${findModel}`)
            .then(response => response.json())
            .then(data => {
                showModels.innerHTML = '';
                data.forEach(model => {
                    const li = document.createElement('li');
                    li.className = 'list-group-item';
                    li.style.cursor = 'pointer';
                    li.textContent = model.modelName + ' - ' + model.marker;

                    li.addEventListener('click', () => {
                        showModels.style.display = 'none';
                        txtSearchModel.value = li.textContent;
                        txtModelId.value = model.id;
                    });
                    showModels.appendChild(li);
                });
            })
            .catch(error => console.log(error))
        }
    </script>
}
