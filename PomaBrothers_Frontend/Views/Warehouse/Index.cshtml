@{

}

<h1>Almacenes</h1>
<hr />
<table class="table">
    <thead>
        <tr>
            <th>Almacen</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var warehouse in (List<Warehouse>)ViewBag.Warehouses)
        {
            <tr>
                <td>@warehouse.Name</td>
                <td>
                    <button type="button"
                            onclick="getModelsAsync(@warehouse.Id)"
                            data-id="@warehouse.Id"
                            data-toggle="modal"
                            data-target="#showItemsModal"
                            class="btn btn-success">
                        Inspeccionar
                    </button>
                    <button type="button"
                            data-id="@warehouse.Id"
                            data-toggle="modal"
                            data-target="#deleteModal"
                            class="btn btn-danger">
                        Eliminar
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@*Modal for delete*@
<div class="modal fade" id="deleteModal">
    <div class=" modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title">Confirmar acción</h4>
            </div>

            <div class="modal-body">
                <p>Desea eliminar el almacén y todo lo que contiene?</p>
                <input id="logId" type="hidden" />
            </div>

            <div class="modal-footer">
                <input type="submit" id="btnDelete" onclick="confirmDelete()" class="btn btn-success" value="Confirmar" />
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@*Modal for Models*@
<div class="modal fade" id="showItemsModal">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Modelos disponibles</h4>
                <button type="button" class="btn-close" id="btnCloseModal" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="bodyContainerModal"> 
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="btnClearModal" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@*Modal for Items*@
<div class="modal fade" id="showItems">
    <div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Productos</h4>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="printItemsDiv">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div id="countdown" style="display: none;">
    <span id="countdown-value" hidden>900</span>
</div>

<script src="~/js/countdown.js"></script>
<script src="~/js/session.js" asp-append-version="true"></script>


@section Scripts{
    <script>
        const txtId = document.getElementById('logId');
        const showItems = document.getElementById('showItems');
        const itemContainer = document.getElementById('itemContainer');
        const bodyContainerModal = document.getElementById('bodyContainerModal');

        var printItemsDiv;
        

        function getModelsAsync(id) {
            fetch(`/Warehouse/ShowModelsAvailable?id=${id}`)
            .then(res => {
                if (res.ok) {
                    return res.json();
                }
                return null;
            })
            .then(data => {
                data.forEach(section => {
                    printModels(section);
                });
            })
            .catch(error => console.error(error))
        }
        
        function printModels(section){
            let capacity;
            if (section.itemModel.capacityOrSize != null && section.itemModel.measurementUnit != null){
                capacity = section.itemModel.capacityOrSize + ' ' + section.itemModel.measurementUnit;
            }
            else
            {
                capacity = 'Sin capacidad';
            }
            const html = `<div class="row">
                               <div class="col-md-5 p-3">
                                  <p>
                                    <label for="lblName" class="fw-bold">Modelo:</label>
                                    <label id="lblName">${section.itemModel.modelName}</label>
                                  </p>
                                  <p>
                                    <label for="lblMarker" class="fw-bold">Marca:</label>
                                        <label id="lblMarker">${section.itemModel.marker}</label>
                                  </p>
                                  <p>
                                        <label>${capacity}</label>
                                  </p>
                                  <p>
                                    <label for="lblQuantity" class="fw-bold">Cantidad:</label>
                                    <label id="lblQuantity">${section.modelQuantity}</label>
                                  </p>
                               </div>
                               <div class="col-md-4">
                                  <button id="btnShowModels" onclick="printItems(${section.itemModel.id})"
                                            class="btn btn-success h-50 fw-bold mt-5"
                                            type="button"
                                            data-toggle="modal"
                                            data-target="#showItems">
                                     Ver Productos
                                  </button>
                               </div>
                          </div>
                          
                          <hr/>`;
            bodyContainerModal.insertAdjacentHTML('beforeend', html);
            printItemsDiv = document.getElementById('printItemsDiv');
        }

        function printItems(id){
            printItemsDiv.innerHTML = '';
            fetch(`/Warehouse/ShowItemsAvailable/${id}`)
            .then(res => {
                if(res.ok){
                    return res.json();
                }
                return null;
            })
            .then(data => {
                if (data != null) {
                    const containerCenter = document.createElement('div');
                    containerCenter.classList.add('container');
                    for (let i = 0; i < data.length; i += 2) {
                        const row = document.createElement('div');
                        row.classList.add('row', 'mb-3', 'justify-content-center');
                        for (let j = i; j < i + 2 && j < data.length; j++) {
                            const item = data[j];
                            const html = `<div class="col-md-6">
                                            <div class="card mb-3 border-success" style="max-width: 640px;">
                                                <div class="card-header bg-transparent border-light fw-bold">${item.name}</div>
                                                <div class="row g-0">
                                                    <div class="col-md-4">
                                                        <img class="img-fluid rounded-start p-bg-opacity-10 w-100 h-100 p-3" src="https://images.unsplash.com/photo-1622737133809-d95047b9e673?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8bWluaW1hbCUyMGJhY2tncm91bmR8ZW58MHx8MHx8fDA%3D&auto=format&fit=crop&w=500&q=60">
                                                    </div>
                                                    <div class="col-md-8">
                                                        <div class="row">
                                                            <div class="col">
                                                                <div class="card-body">
                                                                    <p>
                                                                        <label class="text-sm fw-bold">Color:</label>
                                                                        <label class="text-sm">${item.color}</label>
                                                                    </p>
                                                                    <p>
                                                                        <label class="text-sm fw-bold">Precio(Bs.):</label>
                                                                        <label class="text-sm">${item.price}</label>
                                                                    </p>
                                                                    <p>
                                                                        <label class="text-sm fw-bold">N° de serie:</label>
                                                                        <label class="text-sm">${item.serie}</label>
                                                                    </p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>`;
                            const temp = document.createElement('div');
                            temp.innerHTML = html;
                            row.appendChild(temp.firstChild);
                        }
                        containerCenter.appendChild(row);
                    }
                    printItemsDiv.appendChild(containerCenter);
                }
            })
            .catch(error => console.error(error))
        }

        function confirmDelete() {
            const id = txtId.value;
            fetch(`/Warehouse/Delete?id=${id}`)
            .then(response => {
                if (response.ok) {
                    document.getElementById('deleteModal').style.display = 'none';
                    location.reload();
                }
                else {
                    console.log('Internal server error');
                }
            })
            .catch(error => console.error(error))
        }


        const btnClearModal = document.getElementById('btnClearModal');
        const btnCloseModal = document.getElementById('btnCloseModal');
        btnClearModal.addEventListener('click', () => {
            bodyContainerModal.innerHTML = '';
        });
        btnCloseModal.addEventListener('click', () => {
            bodyContainerModal.innerHTML = '';
        });
    </script>
}
