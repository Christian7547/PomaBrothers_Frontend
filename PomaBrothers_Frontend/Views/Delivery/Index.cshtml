@{
    ViewData["Title"] = "Entregas";
}

<h1>Entregas</h1>

<hr />

<div>
    <button class="btn btn-success m-4"
            data-toggle="modal"
            data-target="#modalReports">
        Reporte de entregas
    </button>
</div>

<div class="modal fade" id="modalReports">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold">Reportes de entregas</h5>
            </div>
            <div class="modal-body">
                <p>
                    <div class="row">
                        <div class="col">
                            <button class="btn btn-success"
                                    type="button"
                                    data-toggle="collapse"
                                    data-target="#multiCollapseExample1"
                                    aria-expanded="false"
                                    aria-controls="multiCollapseExample1">
                                Reporte de entregas por rango de fechas
                            </button>
                        </div>
                        <div class="col">
                            <button class="btn btn-success"
                                    type="button"
                                    data-toggle="collapse"
                                    data-target="#multiCollapseExample2"
                                    aria-expanded="false"
                                    aria-controls="multiCollapseExample2">
                                Ver proveedor de un producto
                            </button>
                        </div>
                    </div>
                </p>
                <div class="row">
                    <div class="collapse multi-collapse" id="multiCollapseExample1">
                        <div class="card card-body">
                            <p>
                                <label for="txtStartDate" class="form-label">Desde:</label>
                                <input id="txtStartDate" type="date" class="form-control" placeholder="Seleccione una fecha"/>
                            </p>
                            <p>
                                <label for="txtEndDate" class="form-label">Hasta:</label>
                                <input id="txtEndDate" type="date" class="form-control" placeholder="Seleccione una fecha"/>
                            </p>
                            <div>
                                <input type="submit" class="btn btn-success" onclick="generatedPdfByDateRange()" value="Generar reporte" data-dismiss="modal" />
                            </div>
                        </div>
                    </div>
                    <p></p>
                    <div class="collapse multi-collapse" id="multiCollapseExample2">
                        <div class="card card-body">
                            <p>
                                <label for="txtProduct" class="form-label">Buscar producto:</label>
                                <input id="txtProduct" type="text" class="form-control" placeholder="Ingrese el nombre del producto"/>
                                <input id="txtProductId" type="hidden"/>
                                <ul id="showProducts"></ul>
                            </p>
                            <div>
                                <input type="submit" class="btn btn-success" data-dismiss="modal" value="Generar reporte" onclick="generatedPDFSupplierByProduct()"/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-2">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <table class="table table-bordered" id="tableInvoices">
                <thead>
                    <tr>
                        <th>Fecha</th>
                        <th>Proveedor</th>
                        <th>Total (Bs.)</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="detailsModal">
    <div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="lblDateInvoice"></h5>
            </div>
            <div class="modal-body">
                <h5 class="fw-bold">Productos:</h5>
                <table class="table table-borderless" id="tableItems">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Modelo</th>
                            <th>Serie</th>
                            <th>Precio de compra (Bs.)</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr>
                            <td colspan="2"></td>
                            <td>
                                <label class="control-label fw-bold">Total:</label>
                            </td>
                            <td>
                                <span id="lblTotal" class="fw-bold"></span>
                                <label class="fw-bold">Bs.</label>
                            </td>
                        </tr>
                    </tfoot>
                </table>
                <hr />
                <div class="row">
                    <div class="col-md-3">
                        <div class="mt-1">
                            <label for="lblBussinesName" class="fw-bold fs-6">Proveedor:</label>
                        </div>
                        <div class="mt-1">
                            <label for="lblPhone" class="fw-bold fs-6">Teléfono:</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mt-1">
                            <label id="lblBussinesName" class="fs-6"></label>
                        </div>
                        <div class="mt-1">
                            <label id="lblPhone" class="fs-6"></label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="d-flex align-items-center justify-content-center modal-footer">
                <button type="button" class="btn btn-danger w-50" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        const tableInvoices = document.getElementById('tableInvoices');

        const tableItems = document.getElementById('tableItems');
        const lblTotal = document.getElementById('lblTotal');
        const lblDateInvoice = document.getElementById('lblDateInvoice');
        const lblBussinesName = document.getElementById('lblBussinesName');
        const lblPhone = document.getElementById('lblPhone');

        const txtStartDate = document.getElementById('txtStartDate');
        const txtEndDate = document.getElementById('txtEndDate');

        const txtProduct = document.getElementById('txtProduct');
        const txtProductId = document.getElementById('txtProductId');
        const showProducts = document.getElementById('showProducts');

        document.addEventListener('DOMContentLoaded', () => {
            txtProduct.addEventListener('input', () => {
                showProducts.style.display = 'block';
                searchProduct(txtProduct.value);
            });
            getInvoices();
        });

        function getInvoices() {
            fetch('/Delivery/GetInvoicesWithDetails')
            .then(res => {
                if (res.ok) {
                    return res.json();
                }
            })
            .then(data => {
                showInvoices(data);
            })
            .catch(error => console.error(error));
        }

        function showInvoices(invoices){
            const tbody = tableInvoices.getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';
            for (let i = 0; i < invoices.length; i++) {
                var row = tbody.insertRow();
                row.insertCell(0).textContent = invoices[i].registerDate;
                row.insertCell(1).textContent = invoices[i].supplier.bussinesName;
                row.insertCell(2).textContent = invoices[i].total;

                var btnDetails = document.createElement('button');
                btnDetails.classList.add('btn', 'btn-success');
                btnDetails.textContent = 'Ver Detalles';
                btnDetails.setAttribute('data-target', '#detailsModal');
                btnDetails.setAttribute('data-toggle', 'modal');
                btnDetails.onclick = () => {
                    showDetailsOfInvoice(invoices[i]);
                    showItems(invoices[i].deliveryDetails);
                }
                row.insertCell(3).appendChild(btnDetails);
            }
        }

        function showDetailsOfInvoice(invoice){
            lblTotal.textContent = invoice.total;
            lblDateInvoice.textContent = `Recibo del ${invoice.registerDate}`;
            lblBussinesName.textContent = invoice.supplier.bussinesName;
            lblPhone.textContent = invoice.supplier.phone;
        }

        function showItems(items) {
            const tbody = tableItems.getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';
            items.forEach(detail => {
                var row = tbody.insertRow();
                row.insertCell(0).textContent = detail.item.name;
                row.insertCell(1).textContent = detail.item.itemModel.modelName;
                row.insertCell(2).textContent = detail.item.serie;
                row.insertCell(3).textContent = detail.purchasePrice;
            });
        }

        function generatedPdfByDateRange(){
            let startDate = txtStartDate.value;
            let endDate = txtEndDate.value;
            fetch(`/DeliveryReports/GeneratedReportByDateRange?startDate=${startDate}&finishDate=${endDate}`)
            .then(res => res.blob())
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                let toDay = new Date();
                let formatDate = toDay.toISOString().slice(0, 10);
                a.href = url;
                a.download = `ReportePedidos_${formatDate}.pdf`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
            })
            .catch(error => console.error('Error al descargar el archivo: ', error))
        }

        function searchProduct(productName){
            fetch(`/Item/SearchProduct?searchProduct=${productName}`)
            .then(res => res.json())
            .then(data => {
                showProducts.innerHTML = '';
                data.forEach(item => {
                    const li = document.createElement('li');
                    li.className = 'list-group-item';
                    li.style.cursor = 'pointer';
                    li.textContent = item.productName;
                    li.addEventListener('click', () => {
                        showProducts.style.display = 'none';
                        txtProduct.value = li.textContent;
                        txtProductId.value = item.productId;
                    });
                    showProducts.appendChild(li);
                });
            })
            .catch(error => console.log(error))
        }

        function generatedPDFSupplierByProduct(){
            let id = txtProductId.value;
            fetch(`/DeliveryReports/GeneratedReportSupplierByProduct?productId=${id}`)
            .then(res => res.blob())
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                let toDay = new Date();
                let formatDate = toDay.toISOString().slice(0, 10);
                a.href = url;
                a.download = `ReporteProveedorProducto_${formatDate}.pdf`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
            })
            .catch(error => console.error('Error al descargar el archivo: ', error))
        }
    </script>
}